
# select valid deployments, that contain complete data sets

select site, station,
       round(cast(avg(dlondd) as numeric),5),
       round(cast(avg(dlatdd) as numeric),5)
  from acoustic_deployment
 where site      <> ''
   and station   <> 'unknown'
   and (dlondd is not null and dlatdd is not null)
 group by 1,2
 order by 1,2;

View definition: public.tm_acoustic_with_eventid

SELECT tm.serialnum, tm.idcode, tm.invoicedate, tm.ordernumber, tm.tagfamily, tm.interval_min, tm.interval_max, tm.est_taglife,
       tm.codespace1, tm.idcode2, tm.codespace2, tm.sensor, tm.slope, tm.intercept, tm.idcode3, tm.codespace3, tm.sensor2, tm.slope2,
       tm.intercept2, uni.eventid, uni.tagcode, uni.ptt, tm.vr4_feed, uni.taggingdate, uni.animal_id, uni.nickname, uni.commonname,
       uni.taggingtime, uni.len1, uni.species, uni.dlatdd, uni.dlondd, tm.dead_by_date, tm.last_detect_date, uni.seriesname, uni.toppid,
       uni.sex, uni.len1type, tm.sensor3, tm.slope3, tm.intercept3, uni.angler, uni.baittype, uni.deploycomment, uni.fishmethod,
       uni.fishingdepth, uni.halfgirth, uni.injuries, uni.leadtagger, uni.len2, uni.len2type, uni.mass, uni.masstype, uni.sstprobe,
       uni.sst, uni.seastate, uni.sexmaturity, uni.tageventcomment, uni.tagposition, uni.tagteam, uni.taggingvessel, uni.weather, 
       uni.tag1side, uni.tag2side, uni.waterdepth, uni.claspers, uni.len3, uni.len3type, tm.taglocation, tm.tagtype
  FROM tbltmacoustic tm

  JOIN (
       SELECT fg.fgsdkey AS eventid, fg.ptt, fg.tagcode, fg.tagtype, fg.taggingdate, fg.animal_id, ''::text AS nickname, fg.commonname,
              fg.taggingtime, fg.len1, fg.species, fg.dlatdd, fg.dlondd, fg.seriesname, fg.toppid, fg.sex, fg.len1type, fg.angler,
              fg.baittype, fg.deploycomment, fg.fishmethod, fg.fishingdepth, fg.halfgirth, fg.injuries, fg.leadtagger, fg.len2,
              fg.len2type, fg.mass, fg.masstype, fg.sstprobe, fg.sst, fg.seastate, ''::text AS sexmaturity, fg.tageventcomment,
              fg.tagposition, fg.tagteam, fg.surgeryboat AS taggingvessel, fg.weather, ''::text AS tag1side, ''::text AS tag2side,
              ''::text AS waterdepth, ''::text AS claspers, ''::text AS len3, ''::text AS len3type
         FROM tblfgsatdeployments fg
        UNION ALL
       SELECT sg.sgdepkey AS eventid, sg.ptt, sg.tagcode, sg.tagtype, sg.taggingdate, sg.animal_id, sg.nickname, sg.commonname,
              sg.taggingtime, sg.len1, sg.species, sg.dlatdd, sg.dlondd, sg.seriesname, sg.toppid, sg.sex, sg.len1type, sg.angler,
              sg.baittype, sg.deploycomment, sg.fishmethod, sg.fishingdepth, sg.halfgirth, sg.injuries, sg.leadtagger, sg.len2,
              sg.len2type, sg.masskg, sg.masstype, sg.probe, sg.sst, sg.seastate, sg.sexmaturity, sg.tageventcomment,
              sg.tagposition, sg.tagteam, sg.taggingvessel, sg.weather, sg.tag1side, sg.tag2side, sg.waterdepth, sg.claspers,
              sg.len3, sg.len3type
         FROM tblsharkdeployment sg
       ) uni ON uni.ptt = tm.idcode
                AND "substring"(uni.tagcode, 5, 9) = tm.serialnum
 WHERE uni.tagtype ~~* 'acoustic'::text
 ORDER BY uni.eventid;

 Table "aatams.receiver_deployment"
        Column        |            Type             | Modifiers 
----------------------+-----------------------------+-----------
 id                   | bigint                      | not null ... make serial? -- ad.tkey
 version              | bigint                      | not null ... 0
 acoustic_releaseid   | character varying(255)      | not null ... ad.project
 bottom_depthm        | real                        | not null ... ad.bottom_depth_m
 comments             | character varying(255)      | not null ... ad.type
 deployment_date      | timestamp without time zone | not null ... ad.deploystamp
 deployment_number    | integer                     | not null ... ad.receiver_dnum
 depth_below_surfacem | real                        | not null ... ad.receiver_depth
 location             | bytea                       | not null ... null -- see atn_acoustic_station record for location
 mooring_type_id      | bigint                      | not null ... null -- ad.substrate + ad.cable_len
 receiver_id          | bigint                      | not null ... ad.receiver
 receiver_orientation | character varying(255)      | not null ... 'unknown'
 recovery_date        | timestamp without time zone | not null ... '12/31/9999'
 station_id           | bigint                      | not null ... atn_acoustic_station.station_id (topp_station_id = ad.tkey)


copy (select 0,0,coalesce(ad.project,'unknown'),coalesce(ad.bottom_depth_m,0),concat(ad.type,' - ',ad.substrate,' - ',ad.cable_len),
      coalesce(ad.deploystamp,'2000-01-01'),ad.receiver_dnum,coalesce(ad.receiver_depth,0),0,0,ad.receiver,'unknown','2100-12-31',0
 from acoustic_deployment ad)
   to '/tmp/topp.acoustic_deployment-2.csv' delimiter '|';

copy receiver_deployment from '/tmp/topp.acoustic_deployment-2.csv' delimiter '|';

# next:
# - fill in "id" column, alter table column to "serial"
# - retrieve station_id = atn_acoustic_station.station_id (topp_station_id = ad.tkey)

insert into atndb.aatams.receiver_deployment ()
select 0,0,ad.project,ad.bottom_depth_m,ad.type,ad.deploystamp,ad.receiver_dnum,
       ad.receiver_depth,null,concat(ad.substrate,' ',ad.cable_len),ad.receiver,'unknown',
       '2100-12-31',0
  from acoustic_deployment ad;

 Table "public.acoustic_deployment"
     Column     |            Type             |                             Modifiers                              
----------------+-----------------------------+--------------------------------------------------------------------
 deploystamp    | timestamp without time zone | 
 latdeg         | text                        | 
 latmin         | text                        | 
 londeg         | text                        | 
 lonmin         | text                        | 
 tzone          | text                        | 
 site           | text                        | default 'unknown'::text
 project        | text                        | default 'unknown'::text
 dlondd         | double precision            | 
 dlatdd         | double precision            | 
 riser_m        | double precision            | 
 bottom_depth_m | double precision            | 
 type           | text                        | default 'unknown'::text
 comments       | text                        | 
 receiver_dnum  | integer                     | 
 station        | text                        | default 'unknown'::text
 tkey           | integer                     | not null default nextval('acoustic_deployment_tkey_seq'::regclass)
 downloadid     | bigint                      | 
 receiver       | integer                     | 
 receiver_depth | double precision            | 
 region         | text                        | default 'unknown'::text
 lost_missing   | text                        | default '0'::text
 substrate      | text                        | 
 hydrophone     | integer                     | 
 cable_len      | text                        | 
 atn_site       | integer                     | 

drop table if exists atn_acoustic_station;
create table atn_acoustic_station (
    station_id       serial,
    topp_station_id  int,
    station_project  text,
    station_region   text,
    station_site     text,
    station_name     text,
    longitude        double precision,
    latitude         double precision
);

# from topp.public
copy (select tkey,project,region,site,station,dlondd,dlatdd from acoustic_deployment order by tkey)
     to '/tmp/topp.acoustic_deployment.csv' delimiter '|';

# into atndb.aatams
copy atn_acoustic_station (topp_station_id,station_project,station_region,station_site,station_name,longitude,latitude)
     from '/tmp/topp.acoustic_deployment.csv' delimiter '|';

-----
                                        Table "public.acoustic_data"
     Column     |            Type             |                          Modifiers                           
----------------+-----------------------------+--------------------------------------------------------------
 tkey           | integer                     | not null default nextval('acoustic_data_tkey_seq'::regclass)
 channel        | text                        | 
 code           | integer                     | 
 date           | text                        | 
 time           | text                        | 
 data           | text                        | 
 units          | text                        | 
 receiver       | integer                     | 
 dataid         | integer                     | 
 downloadid     | bigint                      | 
 longitude      | double precision            | 
 latitude       | double precision            | 
 receiver_dnum  | integer                     | 
 codespace      | text                        | 
 false_hit      | integer                     | default 0
 fdate          | text                        | 
 ftime          | text                        | 
 ping_detection | timestamp without time zone | 
Indexes:
    "acoustic_data_pkey" PRIMARY KEY, btree (tkey)

topp=# \d acoustic_whiteshark
            View "public.acoustic_whiteshark"
     Column     |            Type             | Modifiers 
----------------+-----------------------------+-----------
 eventid        | integer                     | 
 code           | integer                     | 
 codespace      | text                        | 
 receiver       | integer                     | 
 ping_detection | timestamp without time zone | 
 site           | text                        | 
 station        | text                        | 
 dlondd         | double precision            | 
 dlatdd         | double precision            | 

topp=#

SELECT tm.eventid,
       ac.code, ac.codespace, ac.receiver, ac.ping_detection,
       ad.site, ad.station, ad.dlondd, ad.dlatdd
  FROM acoustic_data ac
       JOIN acoustic_deployment ad
         ON ac.receiver      = ad.receiver
        AND ac.receiver_dnum = ad.receiver_dnum

       JOIN (
       SELECT tm_acoustic_with_eventid.idcode, tm_acoustic_with_eventid.codespace1,
              tm_acoustic_with_eventid.taggingdate::date AS tagdate, tm_acoustic_with_eventid.eventid
         FROM tm_acoustic_with_eventid
        WHERE tm_acoustic_with_eventid.eventid::text ~~ '19%'::text
        UNION ALL
       SELECT tm_acoustic_with_eventid.idcode2, tm_acoustic_with_eventid.codespace2,
              tm_acoustic_with_eventid.taggingdate::date AS taggingdate, tm_acoustic_with_eventid.eventid
         FROM tm_acoustic_with_eventid
        WHERE tm_acoustic_with_eventid.idcode2 IS NOT NULL AND tm_acoustic_with_eventid.eventid::text ~~ '19%'::text
        UNION ALL
       SELECT tm_acoustic_with_eventid.idcode3, tm_acoustic_with_eventid.codespace3,
              tm_acoustic_with_eventid.taggingdate::date AS taggingdate, tm_acoustic_with_eventid.eventid
         FROM tm_acoustic_with_eventid
        WHERE tm_acoustic_with_eventid.idcode3 IS NOT NULL
          AND tm_acoustic_with_eventid.eventid::text ~~ '19%'::text) tm
           ON ac.code      = tm.idcode
          AND ac.codespace = tm.codespace1

 WHERE ac.ping_detection  > tm.tagdate
   AND ac.ping_detection  < 'now'::text::date
   AND ac.false_hit      <> 1;

